/*
 * @author Jason Duffey
 * @author Caleb Smith
 * @version 1.7 - 4/9/14
 *
 * The Frame to play the game in, displays text output, picture of the room, 
 * and takes in user input
 */
package mp4package;

import java.io.IOException;


public class TextAdventureFrame extends javax.swing.JFrame {
    
    private Command commands;
    private TrailRoom currentRoom;
    /**
     * Creates new form TextAdventureFrame
     */
    public TextAdventureFrame() {
        initComponents();
        inputTB.requestFocusInWindow();
        commands = new Command();
        //set the initial boxes to the players initial location
        currentRoom = (commands.getPlayer()).getCurrentRoom();
        descriptionTA.setText(currentRoom.getLong());
        ObjectTF.setText(currentRoom.getObjectName());
        pictureLabel.setIcon(currentRoom.getPicture());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputTB = new javax.swing.JTextField();
        inputLabel = new javax.swing.JLabel();
        pictureLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTA = new javax.swing.JTextArea();
        ObjectTF = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        responseTF = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Escape to Pokagon Park");
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        inputTB.setMaximumSize(new java.awt.Dimension(450, 30));
        inputTB.setMinimumSize(new java.awt.Dimension(450, 30));
        inputTB.setPreferredSize(new java.awt.Dimension(450, 30));
        inputTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTBActionPerformed(evt);
            }
        });

        inputLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        inputLabel.setText("Input:");

        pictureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pictureLabel.setText("Picture Goes Here");
        pictureLabel.setMaximumSize(new java.awt.Dimension(250, 320));
        pictureLabel.setMinimumSize(new java.awt.Dimension(250, 320));
        pictureLabel.setPreferredSize(new java.awt.Dimension(250, 320));

        descriptionTA.setEditable(false);
        descriptionTA.setColumns(20);
        descriptionTA.setRows(5);
        descriptionTA.setText("Room Description");
        descriptionTA.setToolTipText("");
        jScrollPane1.setViewportView(descriptionTA);

        ObjectTF.setEditable(false);
        ObjectTF.setText("Objects in Room");

        responseTF.setEditable(false);
        responseTF.setColumns(20);
        responseTF.setRows(5);
        jScrollPane2.setViewportView(responseTF);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(181, Short.MAX_VALUE)
                .addComponent(inputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputTB, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(pictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(ObjectTF))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ObjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pictureLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTBActionPerformed
        //parse the user's inputs
        String userInput = inputTB.getText();
        try {
            responseTF.setText(commands.parseCommand(userInput));
        }
        catch (IOException ioe) {
            System.out.println("Could not find file");
            System.out.println(ioe.getMessage());
        }
        
        //update all the fields to reflect the players most recent actions
        currentRoom = (commands.getPlayer()).getCurrentRoom();
        descriptionTA.setText(currentRoom.getLong());
        ObjectTF.setText(currentRoom.getObjectName());
        pictureLabel.setIcon(currentRoom.getPicture());
        inputTB.setText("");
    }//GEN-LAST:event_inputTBActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextAdventureFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextAdventureFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextAdventureFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextAdventureFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextAdventureFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ObjectTF;
    private javax.swing.JTextArea descriptionTA;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextField inputTB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JTextArea responseTF;
    // End of variables declaration//GEN-END:variables
}
