/**
 * @author Jason Duffey
 * @version 1.5 3/12/14
 * 
 * The game of Yahtzee. A registered trademark of Hasbro Inc. For educational
 * purposes only. Not for Sale.
 */

package yahtzeepackage;

import dicetestpackage.DieLabel;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Jason Duffey
 */
public class YahtzeeFrame extends javax.swing.JFrame {
    public final static int NUMBER_OF_DICE = 5;
    public final static int SCORING_COMBOS = 13; //number of valid scoring combinations
    private ArrayList<DieLabel> dice = new ArrayList<DieLabel>();
    private int num_Rolls = 0; //Current number of rolls player has had for each round
    private ScoreCard playerScore = new ScoreCard();
    //to be used to keep track of scoring combos used, in order as appears on 
    //scorecard and in order as the actionEvents appear below
    private boolean hasBeenUsed[] = new boolean[SCORING_COMBOS];
    private boolean hasRolled = false;
    /**
     * Creates new form YahtzeeFrame
     */
    public YahtzeeFrame() {
        initComponents();
        //add the dice
        for ( int i = 0; i < NUMBER_OF_DICE; i++ ) {
          DieLabel thisDie = new DieLabel();
          thisDie.holdDie( false ); 
          dice.add( thisDie );
          dicePanel.add( thisDie );
          thisDie.setEnabled(false);
      } 
        //set the combos used array elements to false
        for(int i = 0; i < SCORING_COMBOS; i++) {
            hasBeenUsed[i] = false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dicePanel = new javax.swing.JPanel();
        onesLabel = new javax.swing.JLabel();
        twosLabel = new javax.swing.JLabel();
        threesLabel = new javax.swing.JLabel();
        foursLabel = new javax.swing.JLabel();
        fivesLabel = new javax.swing.JLabel();
        sixesLabel = new javax.swing.JLabel();
        threeKindLabel = new javax.swing.JLabel();
        fourKindLabel = new javax.swing.JLabel();
        fullHouseLabel = new javax.swing.JLabel();
        smStraightLabel = new javax.swing.JLabel();
        lrgStraightLabel = new javax.swing.JLabel();
        yahtzeeLabel = new javax.swing.JLabel();
        chanceLabel = new javax.swing.JLabel();
        rollBtn = new javax.swing.JButton();
        topHalfLabel = new javax.swing.JLabel();
        topBonusLabel = new javax.swing.JLabel();
        bottomHalfLabel = new javax.swing.JLabel();
        botBonusLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Yahtzee TM");
        setMaximumSize(new java.awt.Dimension(500, 350));
        setMinimumSize(new java.awt.Dimension(500, 350));

        dicePanel.setLayout(new java.awt.GridLayout(1, 5));

        onesLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        onesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        onesLabel.setText("Ones: __");
        onesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                onesLabelMouseReleased(evt);
            }
        });

        twosLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        twosLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        twosLabel.setText("Twos: __");
        twosLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                twosLabelMouseReleased(evt);
            }
        });

        threesLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        threesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        threesLabel.setText("Threes: __");
        threesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                threesLabelMouseReleased(evt);
            }
        });

        foursLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        foursLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        foursLabel.setText("Fours: __");
        foursLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                foursLabelMouseReleased(evt);
            }
        });

        fivesLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fivesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        fivesLabel.setText("Fives: __");
        fivesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fivesLabelMouseReleased(evt);
            }
        });

        sixesLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sixesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sixesLabel.setText("Sixes: __");
        sixesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sixesLabelMouseReleased(evt);
            }
        });

        threeKindLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        threeKindLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        threeKindLabel.setText("3 of a Kind: __");
        threeKindLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                threeKindLabelMouseReleased(evt);
            }
        });

        fourKindLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fourKindLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        fourKindLabel.setText("4 of a Kind: __");
        fourKindLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fourKindLabelMouseReleased(evt);
            }
        });

        fullHouseLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fullHouseLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        fullHouseLabel.setText("Full House: __");
        fullHouseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fullHouseLabelMouseReleased(evt);
            }
        });

        smStraightLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        smStraightLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        smStraightLabel.setText("Small Straight: __");
        smStraightLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                smStraightLabelMouseReleased(evt);
            }
        });

        lrgStraightLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lrgStraightLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lrgStraightLabel.setText("Large Straight: __");
        lrgStraightLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lrgStraightLabelMouseReleased(evt);
            }
        });

        yahtzeeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yahtzeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        yahtzeeLabel.setText("YAHTZEE: __");
        yahtzeeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                yahtzeeLabelMouseReleased(evt);
            }
        });

        chanceLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chanceLabel.setText("Chance: __");
        chanceLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chanceLabelMouseReleased(evt);
            }
        });

        rollBtn.setText("Roll Dice");
        rollBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollBtnActionPerformed(evt);
            }
        });

        topHalfLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        topHalfLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        topHalfLabel.setText("Top Half Score: 0");

        topBonusLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        topBonusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        topBonusLabel.setText("Bonus: 0");

        bottomHalfLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bottomHalfLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bottomHalfLabel.setText("Bottom Half Score: 0");

        botBonusLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botBonusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        botBonusLabel.setText("YAHTZEE Bonus: 0");

        totalLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalLabel.setText("Total: 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(sixesLabel)
                        .addComponent(fivesLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(foursLabel))
                    .addComponent(threesLabel)
                    .addComponent(twosLabel)
                    .addComponent(onesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topBonusLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(topHalfLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bottomHalfLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botBonusLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rollBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chanceLabel)
                    .addComponent(threeKindLabel)
                    .addComponent(fourKindLabel)
                    .addComponent(fullHouseLabel)
                    .addComponent(smStraightLabel)
                    .addComponent(lrgStraightLabel)
                    .addComponent(yahtzeeLabel))
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onesLabel)
                    .addComponent(threeKindLabel)
                    .addComponent(rollBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(twosLabel)
                    .addComponent(fourKindLabel)
                    .addComponent(topHalfLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threesLabel)
                    .addComponent(fullHouseLabel)
                    .addComponent(topBonusLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foursLabel)
                    .addComponent(smStraightLabel)
                    .addComponent(bottomHalfLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fivesLabel)
                    .addComponent(lrgStraightLabel)
                    .addComponent(botBonusLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sixesLabel)
                    .addComponent(yahtzeeLabel)
                    .addComponent(totalLabel))
                .addGap(18, 18, 18)
                .addComponent(chanceLabel)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * updates all the current score fields on the frame.
     */
    public void updateScore() {
        //reset the roll counter and button, once scored
        hasRolled = false;
        num_Rolls = 0;
        rollBtn.setEnabled(true);
        
        for(DieLabel die: dice) {
            die.holdDie(false);
            die.setEnabled(false);
        }
        
        //set players top score
        int topScore = playerScore.getTopScore();
        topHalfLabel.setText("Top Half Score: " + topScore);
        
        //top half bonus
        if (topScore >= 63) {
            playerScore.addToTotalScore(35);
            topBonusLabel.setText("Bonus: 35");
        }
        
        //set bottom half score
        int botScore = playerScore.getBottomScore();
        bottomHalfLabel.setText("Bottom Half Score: " + botScore);
        
        //set Yahtzee Bonus Score
        int bonusScore = playerScore.getBonusScore();
        botBonusLabel.setText("YAHTZEE Bonus: " + bonusScore);
        
        //set total score
        totalLabel.setText("Total: " + playerScore.getTotalScore());
        
        //check if all combos have been used
        for(int i = 0; i < SCORING_COMBOS; i++) {
            //return if any combo has not been used
            if(hasBeenUsed[i] == false) {
                return;
            }
        }
        
        //if here the game has ended
        JOptionPane.showMessageDialog(this, "The game is over!\n You Scored ... "
        + playerScore.getTotalScore() + " points.");
        int play = JOptionPane.showConfirmDialog(this, "Would you like to play again?");
        if (play == JOptionPane.YES_OPTION) {
            newGame();
        } else {
            System.exit(0);
        }
    }
    
    /**
     * resets the game to start fresh.
     */
    public void newGame() {
        //reset the combos used
        for(int i = 0; i < SCORING_COMBOS; i++) {
            hasBeenUsed[i] = false;
        }
        
        //unhold the die
        for(DieLabel die: dice) {
            die.holdDie(false);
        }
        
        //clear other variables
        hasRolled = false;
        num_Rolls = 0;
        playerScore.clearScores();
        
        //reset the Labels
        onesLabel.setText("Ones: __");
        twosLabel.setText("Twos: __");
        threesLabel.setText("Threes: __");
        foursLabel.setText("Fours: __");
        fivesLabel.setText("Fives: __");
        sixesLabel.setText("Sixes: __");
        threeKindLabel.setText("3 of a Kind: __");
        fourKindLabel.setText("4 of a Kind: __");
        fullHouseLabel.setText("Full House: __");
        smStraightLabel.setText("Small Straight: __");
        lrgStraightLabel.setText("Large Straight: __");
        yahtzeeLabel.setText("YAHTZEE: __");
        chanceLabel.setText("Chance: __");
        updateScore();
    }
    
    private void rollBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollBtnActionPerformed
        hasRolled = true;
        num_Rolls++;        
        for (DieLabel die: dice) {
            die.rollDie();
        }
        if(num_Rolls >= 3) {
            rollBtn.setEnabled(false);
        }
        
        for(DieLabel die: dice) {
            die.setEnabled(true);
        }
    }//GEN-LAST:event_rollBtnActionPerformed

    private void onesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onesLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[0]) {
            return;
        }
        
        int score = playerScore.scoreAsNumber(1, dice);
        onesLabel.setText("Ones: " + score);
        hasBeenUsed[0] = true;
        updateScore();

    }//GEN-LAST:event_onesLabelMouseReleased

    private void twosLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twosLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[1]) {
            return;
        }
        
           int score = playerScore.scoreAsNumber(2, dice);
        twosLabel.setText("Twos: " + score);
        hasBeenUsed[1] = true;
        updateScore();
    }//GEN-LAST:event_twosLabelMouseReleased

    private void threesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threesLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[2]) {
            return;
        }
        
        int score = playerScore.scoreAsNumber(3, dice);

        threesLabel.setText("Threes: " + score);
        hasBeenUsed[2] = true;
        updateScore();
    }//GEN-LAST:event_threesLabelMouseReleased

    private void foursLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foursLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[3]) {
            return;
        }
        
        int score = playerScore.scoreAsNumber(4, dice);
        foursLabel.setText("Fours: " + score);
        hasBeenUsed[3] = true;
        updateScore();
    }//GEN-LAST:event_foursLabelMouseReleased

    private void fivesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fivesLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[4]) {
            return;
        }
        
        int score = playerScore.scoreAsNumber(5, dice);

        fivesLabel.setText("Fives: " + score);
        hasBeenUsed[4] = true;
        updateScore();
    }//GEN-LAST:event_fivesLabelMouseReleased

    private void sixesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sixesLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[5]) {
            return;
        }
        
        int score = playerScore.scoreAsNumber(6, dice);
        sixesLabel.setText("Sixes: " + score);
        hasBeenUsed[5] = true;
        updateScore();
    }//GEN-LAST:event_sixesLabelMouseReleased

    private void threeKindLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeKindLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[6]) {
            return;
        }
        int score = playerScore.scoreAsAKind(3, dice);
        threeKindLabel.setText("3 of a Kind: " + score);
        hasBeenUsed[6] = true;
        updateScore();
    }//GEN-LAST:event_threeKindLabelMouseReleased

    private void fourKindLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourKindLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[7]) {
            return;
        }
        int score = playerScore.scoreAsAKind(4, dice);
        fourKindLabel.setText("4 of a Kind: " + score);
        hasBeenUsed[7] = true;
        updateScore();
    }//GEN-LAST:event_fourKindLabelMouseReleased

    private void fullHouseLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullHouseLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[8]) {
            return;
        }
        int score = playerScore.scoreFullHouse(dice);
        fullHouseLabel.setText("Full House: " + score);
        hasBeenUsed[8] = true;
        updateScore();
    }//GEN-LAST:event_fullHouseLabelMouseReleased

    private void smStraightLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smStraightLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[9]) {
            return;
        }
        int score = playerScore.scoreAsStraight(4, dice);
        smStraightLabel.setText("Small Straight: " + score);
        hasBeenUsed[9] = true;
        updateScore();
    }//GEN-LAST:event_smStraightLabelMouseReleased

    private void lrgStraightLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrgStraightLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[10]) {
            return;
        }
        int score = playerScore.scoreAsStraight(5, dice);
        lrgStraightLabel.setText("Large Straight: " + score);
        hasBeenUsed[10] = true;
        updateScore();
    }//GEN-LAST:event_lrgStraightLabelMouseReleased

    private void yahtzeeLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yahtzeeLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[11]) {
            return;
        }
        int score = playerScore.scoreYahtzee(dice);
        yahtzeeLabel.setText("YAHTZEE: " + score);
        hasBeenUsed[11] = true;
        updateScore();
    }//GEN-LAST:event_yahtzeeLabelMouseReleased

    private void chanceLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chanceLabelMouseReleased
        if(!hasRolled) {
            return;
        }
        if (hasBeenUsed[12]) {
            return;
        }
        int score = playerScore.scoreChance(dice);
        chanceLabel.setText("Chance: " + score);
        hasBeenUsed[12] = true;
        updateScore();  
    }//GEN-LAST:event_chanceLabelMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YahtzeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YahtzeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YahtzeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YahtzeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YahtzeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel botBonusLabel;
    private javax.swing.JLabel bottomHalfLabel;
    private javax.swing.JLabel chanceLabel;
    private javax.swing.JPanel dicePanel;
    private javax.swing.JLabel fivesLabel;
    private javax.swing.JLabel fourKindLabel;
    private javax.swing.JLabel foursLabel;
    private javax.swing.JLabel fullHouseLabel;
    private javax.swing.JLabel lrgStraightLabel;
    private javax.swing.JLabel onesLabel;
    private javax.swing.JButton rollBtn;
    private javax.swing.JLabel sixesLabel;
    private javax.swing.JLabel smStraightLabel;
    private javax.swing.JLabel threeKindLabel;
    private javax.swing.JLabel threesLabel;
    private javax.swing.JLabel topBonusLabel;
    private javax.swing.JLabel topHalfLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel twosLabel;
    private javax.swing.JLabel yahtzeeLabel;
    // End of variables declaration//GEN-END:variables
}
